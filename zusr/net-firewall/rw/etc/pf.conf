# quBSD - net-firewall acts as the main firwall for the system and all client jails
# nicvm has no IP address. promisc passes all traffic to net-firewall.
# Depending on your server setup, you might need to significantly alter this file 

### MACROS ####
# quBSD - do not delete or comment these macros. Automatically updated by exec.created
ext_if = ""
jIP = ""
routerIP = ""
wgPorts = ""

# CLIENT MACROS 
# For workstation jails that use net-firewall as their gateway (eg: no VPN)
clientProto= "udp tcp"
# Services   SSH DNS HTTP HTTPS 
clientPorts = "22 53 80 443"

# SERVER MACROS 
# quBSD convention sets server internal IPs with the form:  10.128.x.2/30
#       This segregates server into separate subnets
servIP = "10.128.1.2"
servProto = "tcp udp"
servPorts = "43443 22000 21027"

# Hypothetical expansion for additional server jails
#servIP2 = "10.128.2.2"
#servProto2 = ""
#servPorts2 = ""

# TABLES
# quBSD - do not delete or comment this table. Automatically updated by exec.created
table <pass_ips> { } 

# OPTIONS
set skip on lo0

# NORMALIZATION
scrub in all 

# QUEUEING

# TRANSLATION
# Segregate client subnets from the host's external IP 
nat on $ext_if from ! ($ext_if) to any -> ($ext_if) 

# Redirect traffic based on ports intended for server 
rdr pass on $ext_if inet proto { $servProto } to port { $servPorts } -> $servIP 

# Hypothetical expansion for additional server jails 
# rdr pass on $ext_if inet proto { $servProto2 } to port { $servPorts2 } -> $servIP2

# PACKET FILTERING
block all

### CLIENT FILTERING ###

# Pass in traffic originating from clients (workstation and wireguard jails)
pass in inet proto { $clientProto } from ! ($ext_if) to port { $clientPorts $wgPorts } keep state
pass in inet proto icmp from ! ($ext_if) to any keep state

pass out on $ext_if inet proto { $clientProto } to port { $clientPorts $wgPorts } keep state 
pass out on $ext_if inet proto icmp icmp-type { echoreq } keep state

### SERVER FILTERING ###

# Pass traffic originating from outside of host, to the server jail(s) 
pass in inet proto { $servProto } from any to port { $servPorts } keep state
pass out inet proto { $servProto } from any to $servIP port { $servPorts } keep state

# Pass traffic originating from internal server, to outside internet 
pass in inet proto { $servProto } from $servIP to any keep state 
pass out inet proto { $servProto } from $servIP to any keep state 

# Hypothetical expansion for additional server jails 
#pass in inet proto { $servProto2 } from any to port { $servPorts2 } keep state
#pass out inet proto { $servProto2 } from any to $servIP port { $servPorts2 } keep state
#pass in inet proto { $servProto2 } from $servIP2 to any keep state 
#pass out inet proto { $servProto2 } from $servIP2 to any keep state 

# Block client jails from sending packets to each other 
block inet from <pass_ips> to <pass_ips>

# Traceroute for troubleshooting. Default off. 
#pass out inet proto udp from any to any port 33433 >< 43626 keep state
