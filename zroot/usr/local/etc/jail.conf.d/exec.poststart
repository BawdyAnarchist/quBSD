#!/bin/sh

# chflags should be applied after all system files and startup has been accomplished 

# Get datasets, mountpoints; and define files.
jails_zfs=$(sed -En "s/^jails_dataset[[:blank:]]+//p" /usr/local/etc/jail.conf.d/quBSD.conf)
m_jails=$(zfs get -H mountpoint $jails_zfs | awk '{print $3}')
jmap="/usr/local/etc/jail.conf.d/jailmap.conf"
sed -i '' -e 's/[[:blank:]]*$//g' $jmap

# Define script variables
jail="$1"
schg=$(sed -nE "s/^${jail}[[:blank:]]+schg[[:blank:]]+//p" $jmap)
seclvl=$(sed -nE "s/^${jail}[[:blank:]]+seclvl[[:blank:]]+//p" $jmap)

usage() {
	printf "%b" "\n$err\n\n"
	exit 1
}
checks() {
        if [ -z "$jail" ] ; then
                err="Error: exec.poststart:  Must select a jail"
		usage
        elif [ -z "$jmap" ] ; then
                err="Error: exec.poststart:  No file selected for jailmap.conf"
		usage
        fi
}

security_flags() {
	[ -z "$schg" -o "$schg" = "none" ] && jdir=""
	[ "$schg" = "all" ] && jdir="/bin /sbin /boot /etc /home /lib /libexec /root /rw /usr"
	[ "$schg" = "sys" ] && jdir="/boot /rw /bin /sbin /etc /lib /libexec /usr/bin /usr/sbin \
					/usr/lib /usr/libexec /usr/libdata /usr/lib32 /usr/local"
	for d in $jdir; do
		[ -e "${m_jails}/${jail}${d}" ] && chflags -R schg "${m_jails}/${jail}${d}"
	done 
	[ -n "$seclvl" ] && jexec -l $jail sysctl kern.securelevel="$seclvl" || exit 0
}

checks 

security_flags

