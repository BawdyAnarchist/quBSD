#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh

get_parameters() {
	JAIL="$1"

	# Get parameters. Class was already verified, so skip checks. 
	get_jail_parameter -dqs CLASS  "$JAIL" ||  exit 1
	get_jail_parameter IPV4    "$JAIL"     ||  exit 1
	get_jail_parameter GATEWAY "$JAIL"     ||  exit 1
	get_jail_parameter MAXMEM  "$JAIL"     ||  exit 1
	get_jail_parameter CPUSET  "$JAIL"     ||  exit 1

	# Check/warn if outside of quBSD IPv4 convention, but don't fail 
	chk_isqubsd_ipv4 "$IPV4" "$JAIL"

	if [ $GATEWAY = "none" ] ; then
		IPV4="none"
	else
		# MTU only with valid IP. Quiet messages (MTU is not critical) 
		get_jail_parameter -q MTU "$JAIL" 
	fi
}

connect_to_gateway() {
	# If auto, then assign the global variable IPV4 to have a real IP addr
	[ "$IPV4" = "auto" ] && assign_ipv4_auto "$JAIL" 

	# Connect jail, to it's gateway, and assign VIF used for gateway 
	chk_isrunning "$GATEWAY" && _VIF=$(connect_client_to_gateway -e "$JAIL" "$GATEWAY" "$IPV4")
}

connect_to_clients() {

	# Get client IP
	_cIP=$(get_jail_parameter -deq IPV4 "$_client") 
	[ "$_cIP" = "auto" ] && _cIP=$(assign_ipv4_auto -e "$_client")

	# Bring up connection, and return the VIF used for the client
	_cVIF=$(connect_client_to_gateway -e "$_client" "$JAIL" "$_cIP")

	# Need to modify the client pf.conf with the epair
	_cPF="${M_ZUSR}/${_client}/${PFCONF}"

	if [ -e "$_cPF" ] ; then 
		# Make sure flags are down
		chflags -R noschg "${M_ZUSR}/${_client}/rw/etc" 

		# pf needs the external interface and jIP for filtering variables
		sed -i '' -e "s@^ext_if[[:blank:]]*=.*@ext_if = \"${_cVIF}\"@" $_cPF
		sed -i '' -e "s@^jIP[[:blank:]]*=.*@jIP = \"${_cIP}\"@"  $_cPF

		# Restart _client pf service
		jexec -l -U root "$_client" service pf restart > /dev/null 2>&1

		# Reapply jail flags from jmap 
		qb-flags -r $_client > /dev/null 2>&1 &
	fi
}

modify_pf() {

	# Numerous variables need to be modified for pf.conf
	if [ -e "$JPF" ] ; then

		# Make sure flags are down
		chflags -R noschg "${M_ZUSR}/${JAIL}/rw/etc" 

		# $VIF was assigned during the connect_client_to_gateway func. Modify pf.conf 
		sed -i '' -e "s@^ext_if[[:blank:]]*=.*@ext_if = \"${_VIF}\"@" $JPF
		sed -i '' -e "s@^jIP[[:blank:]]*=.*@jIP = \"${IPV4}\"@" $JPF

		# net-jail internal wireguard parameters
		[ -n "$ENDPOINT" ] \
			&& sed -i '' -e "s@^Endpoint[[:blank:]]*=.*@Endpoint = \"${ENDPOINT}\"@" $JPF 

		[ -n "$WGPORTS" ] \
			&& sed -i '' -e "s@^wgPorts[[:blank:]]*=.*@wgPorts = \"${WGPORTS}\"@" $JPF  
	fi
}

resource_control() {
	# Remove any existing rules for the jail 	
	rctl -r jail:${JAIL}:: > /dev/null 2>&1
	
	# Establish max memory allocaiton and jail CPUs
	[ "$MAXMEM" = "none" ] || rctl -a jail:${JAIL}:memoryuse:deny=${MAXMEM}
	[ "$CPUSET" = "none" ] || cpuset -j $JAIL -cl $CPUSET
}

main() {
	
	connect_to_gateway

	modify_pf			

	connect_gateway_to_clients "$JAIL"

	resource_control
}


get_global_variables

get_parameters "$@"

get_networking_variables

main

