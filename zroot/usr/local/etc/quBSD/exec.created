#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh

get_parameters() {
	JAIL="$1"

	# Get parameters. Class was already verified, so skip checks. 
	get_jail_parameter -dqs CLASS  "$JAIL" ||  exit 1
	get_jail_parameter IPV4    "$JAIL"     ||  exit 1
	get_jail_parameter GATEWAY "$JAIL"     ||  exit 1
	get_jail_parameter MAXMEM  "$JAIL"     ||  exit 1
	get_jail_parameter CPUSET  "$JAIL"     ||  exit 1

	# Check/warn if outside of quBSD IPv4 convention, but don't fail 
	chk_isqubsd_ipv4 "$IPV4" "$JAIL"

	if [ gateway = "none" ] ; then
		IPV4="none"
	else
		# We will need the class of the gateway later for VM vs jails handling
		_class_gw=$(get_jail_parameter -eq CLASS "$GATEWAY")

		# MTU only with valid IP. Quiet messages (MTU is not critical) 
		get_jail_parameter -q MTU "$JAIL" 
	fi
}

connect_to_gateway() {
	# Jails connected to VMs must have handling of the tap interface 
	if [ "$_class_gw" == "VM" ] ; then

		# Get the tap interface for the VM
		get_jail_parameter VIF "$GATEWAY" ||  exit 1
		
		# Send vintf to the jail and bring it up. The <jail> rc.conf handles the rest.
		ifconfig $VIF vnet $JAIL 
		jexec -l -U root $JAIL ifconfig $VIF mtu $MTU up

	else
		# If auto, then assign the global variable IPV4 to have a real IP addr
		[ "$IPV4" = "auto" ] && assign_ipv4_auto "$JAIL" 

		# Connect jail, to it's gateway. Global $VIF is assigned inside func.
		chk_isrunning "$GATEWAY" && connect_client_gateway "$JAIL" "$GATEWAY" "$IPV4"
	fi
}

connect_to_clients() {
	# If <jail> serves a network connection, bring those connections up 
	for _client in $(get_info -e _CLIENTS "$JAIL") ; do

		if chk_isrunning "$_client" ; then

			# Get IP of client from jmap 
			_cIP=$(get_jail_parameter -deq IPV4 "$_client") 

			# Assign auto IP to client and connect it to jail.
			[ "$_cIP" = "auto" ] && _cIP=$(assign_ipv4_auto -e "$_client")
			connect_client_gateway "$_client" "$JAIL" "$_cIP" 
		fi
	done
}

modify_pf() {

	# Numerous variables need to be modified for pf.conf
	if [ -e "$JPF" ] ; then

		# Make sure flags are down
		chflags -R noschg "${M_ZUSR}/${JAIL}/rw/etc" 

		# $VIF was assigned during the connect_client_gateway func. Modify pf.conf 
		sed -i '' -e "s@^ext_if[[:blank:]]*=.*@ext_if = \"${VIF}\"@" $JPF    >> $QBLOG 
		sed -i '' -e "s@^jIP[[:blank:]]*=.*@jIP = \"${IPV4}\"@" $JPF

		# net-jail internal wireguard parameters
		[ -n "$ENDPOINT" ] \
			&& sed -i '' -e "s@^Endpoint[[:blank:]]*=.*@Endpoint = \"${ENDPOINT}\"@" $JPF 

		[ -n "$WGPORTS" ] \
			&& sed -i '' -e "s@^wgPorts[[:blank:]]*=.*@wgPorts = \"${WGPORTS}\"@" $JPF  
	fi
}

resource_control() {
	# Remove any existing rules for the jail 	
	rctl -r jail:${JAIL}:: > /dev/null 2>&1
	
	# Establish max memory allocaiton and jail CPUs
	[ "$MAXMEM" = "none" ] || rctl -a jail:${JAIL}:memoryuse:deny=${MAXMEM}
	[ "$CPUSET" = "none" ] || cpuset -j $JAIL -cl $CPUSET
}

main() {
	
	connect_to_gateway

	modify_pf			

	connect_to_clients

	resource_control
}


get_global_variables

get_parameters "$@"

get_networking_variables

main

