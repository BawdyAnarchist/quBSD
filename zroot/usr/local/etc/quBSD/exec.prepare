#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh

get_parameters() {
	# Define script variables
	JAIL="$1"
	echo "STARTING JAIL: $JAIL. $(date "+%Y-%m-%d_%H:%M")" >> $QBLOG

	# Parameters and checks
	get_jail_parameter    CLASS   "$JAIL"  ||  exit 1
	get_jail_parameter    ROOTENV "$JAIL"  ||  exit 1
	get_jail_parameter -d GATEWAY "$JAIL"  ||  exit 1
	get_jail_parameter -d CONTROL "$JAIL"  ||  exit 1

	# Find any remaining mounts for the jail
	JMOUNT=$(mount | grep -Eo "${M_QROOT}/${JAIL}/[^[:blank:]]+")
}

preparation_actions() {
	# Sometimes bridge module unloads
	kldstat -q -m if_bridge || kldload -q if_bridge

	# The control jail should always be on
	start_jail "$CONTROL"

	# Prefer to start gateways here; as jail.conf dependencies can limit versatility
	start_jail "$GATEWAY"

	# Double check to unmount any parts of <jail> before destroy/recreating the dataset
	[ -n "$JMOUNT" ] && echo "$JMOUNT" | xargs umount -f
}

main() {
	# Misc things to do/check before recloning the datasets
	preparation_actions

	case $CLASS in
		appjail|cjail)
			# Reclone the root filesystem for JAIL
			reclone_zroot "$JAIL" "$ROOTENV" || exit 1
		;;
		dispjail)
			# Reclone the root filesystem for JAIL
			reclone_zroot "$JAIL" "$ROOTENV" || exit 1

			# Dispjails also reclone the zusr portion from template (if it exists)
			get_jail_parameter -d TEMPLATE "$JAIL" || exit 1
			chk_valid_zfs "${U_ZFS}/${TEMPLATE}" && reclone_zusr "$JAIL" "$TEMPLATE" || exit 1
		;;
	esac

	return 0
}

get_global_variables

get_parameters "$@"

main


