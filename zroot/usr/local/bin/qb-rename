#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-rename.sh

get_options() {
	while getopts ah opts ; do
		case $opts in
			a) UPDATE="true" ;;
			h) get_msg_rename "none" "usage_0" ;; 
		esac
	done

	shift $((OPTIND -1 ))

	JAIL="$1"
	NEWNAME="$2"
}

define_variables() {
	# Finds jails dependent on the jail to be renamed
	get_jail_parameter -sqd rootjail $JAIL
	get_info _CLIENTS $JAIL
	ROOTJ_FOR=$(sed -nE "s/[[:blank:]]+rootjail[[:blank:]]+${JAIL}\$//p" $JMAP)
	TEMPL_FOR=$(sed -nE "s/[[:blank:]]*template[[:blank:]]+${JAIL}\$//p" $JMAP)
	ALLJAILS="$ROOTJ_FOR $TEMPL_FOR $_CLIENTS"
}

checks() {
	# Check that JAIL was specified, and valid 
	chk_valid_jail "$JAIL" || get_msg_rename "_0" "usage_1" 
	
	# Check that the new jailname is available and has no conflicts 
	chk_avail_jailname "$NEWNAME" || get_msg_rename "none" "usage_1"

	# If jail is running, we're going to restart it
	chk_isrunning "$JAIL" && RESTART="true"

	if [ -z "$UPDATE" ] ; then

		# List jail dependencies for <jail> 
		[ -n "$ROOTJ_FOR" ] && get_msg_rename "_3"
		[ -n "$TEMPL_FOR" ] && get_msg_rename "_4"
		[ -n "$_CLIENTS" ] && get_msg_rename "_5"

		# Alert user to dependencies, and get response
		! chk_isblank "$ALLJAILS" && get_msg_rename "_6" && get_user_response && UPDATE="true"
	fi

	get_msg_rename "_8" && get_user_response  || get_msg_rename "_0" "exit_0" 
}

rename_jail() {
	# Stop jail before renaming. Rename should not happen if stop fails
	stop_jail "$JAIL"  ||  get_msg_rename "_7" "exit_1"  

	# Flags down to modify directory names and fstab
	chflags -R noschg ${M_ZUSR}/$JAIL  ||  get_msg_rename "_7_1" "exit_1"  

	# Modify jailmap. Roojails should update their own rootjail to self
	sed -i '' -E "s/^${JAIL}[[:blank:]]/${NEWNAME}  /g" $JMAP
	[ "${JAIL}" = "${ROOTJAIL}" ] && qb-edit -fq ${NEWNAME} rootjail ${NEWNAME}

	# Modify /etc/jail.conf
	sed -i '' -E "s/^${JAIL}[[:blank:]]+\{/${NEWNAME} \{/g" $JCONF 
	
	# Modify fstab (appjails/dispjails only) 
	[ -e "${M_ZUSR}/${JAIL}" ] \
			&& sed -i '' -E "s/${JAIL}/${NEWNAME}/g" ${M_ZUSR}/${JAIL}/rw/etc/fstab
	
	# Rename associated zfs datasets
	chk_valid_zfs ${ZUSR_ZFS}/${JAIL} \
			&& zfs rename -f ${ZUSR_ZFS}/${JAIL} ${ZUSR_ZFS}/${NEWNAME}

	chk_valid_zfs ${JAILS_ZFS}/${JAIL} \
			&& zfs rename -f ${JAILS_ZFS}/${JAIL} ${JAILS_ZFS}/${NEWNAME}
	
	# Home directory name changed (or dump to /dev/null if doesn't exist)
	[ -e ${M_ZUSR}/${NEWNAME}/usr/home/${JAIL} ] \
			&& mv ${M_ZUSR}/${NEWNAME}/usr/home/${JAIL} \
					${M_ZUSR}/${NEWNAME}/usr/home/${NEWNAME} 
	
	# Jails don't necessarily have custom pw; but modify if so
	pw -V ${M_ZUSR}/${NEWNAME}/rw/etc/ usermod -n ${JAIL} -l ${NEWNAME} -d \
			/usr/home/${NEWNAME} > /dev/null 2>&1
	
	# If jail was stopped for the rename, restart it
	[ -n "$RESTART" ] && start_jail "$NEWNAME"
}

update_dependencies() {
	
	if [ -n "$UPDATE" ] ; then

		for _jail in $ROOTJ_FOR ; do
			[ "$_jail" = "$JAIL" ] || qb-edit -fq $_jail rootjail $NEWNAME
		done

		for _jail in $TEMPJ_FOR ; do
			qb-edit -fq $_jail template $NEWNAME
		done

		for _jail in $_CLIENTS ; do
			qb-edit -fq $_jail gateway $NEWNAME
		done

		# Restart dependencies that were already on
		for _jail in $ALLJAILS ; do

			# Move process to background to parallelize jail restarts 
			chk_isrunning "$_jail" && restart_jail "$_jail" &
		done
		
		# Due to '&' on the restart command, need to positively exit program.
		get_msg_rename "_9" "exit_0"	
	fi
}

get_global_variables

get_options "$@"

define_variables

checks

rename_jail

update_dependencies



