#!/bin/sh

# IMPROVEMENT: Make it so that a command can be run immediately at terminal launch.


. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-ephm.sh

get_options() {
	while getopts hi opts ; do
		case $opts in
			h) get_msg_ephm "none" "usage_0" ;;
			i) _i3wm="true" ;;
			*) exit 1 ;;
		esac
	done

	shift $(( OPTIND - 1 ))

	# Define script variables
	JAIL="$1"
	DATETIME=$(date +%b%d_%H%M)
	NEWSNAP="${U_ZFS}/${JAIL}@DISP${DATETIME}"
}

newjail_name() {
	# Valid jail or exit
	chk_valid_jail "$JAIL" || get_msg_ephm "none" "usage_1"

	# Make name visually easy to identify
	NEWJAIL="EPHM-${JAIL}"
	_cycle=''

	# If DISP-jail exists (even partially), increment the ending number and try again
	while ! chk_avail_jailname "$NEWJAIL" ; do
		_cycle=$(( _cycle + 1 ))
		NEWJAIL="EPHM-${JAIL}_${_cycle}"
	done
}

main() {
	# New snapshot ensures the most up-to-date version of the template jail
	zfs snapshot $NEWSNAP

	#Trap to destroy snapshot after use.
	trap 'zfs destroy -rRf $NEWSNAP ; exit 0' INT TERM HUP QUIT EXIT

	# Create dispjail and disable the no_destroy protection
	qb-create -y -p GATEWAY=none -p IPV4=none -p NO_DESTROY=false -p AUTOSNAP=false \
														-c dispjail -t $JAIL $NEWJAIL > /dev/null 2>&1

	#Trap to ensure DISP doesn't remain after use
	trap	'destroy_ephemeral' INT TERM HUP QUIT EXIT

	if [ -n "$_i3wm" ] ; then
		# i3-specific command. Launch a floating terminal for the dispjail
		xterm -e csh -c "i3-msg -q floating enable, move position center; qb-cmd $NEWJAIL"
	else
		# Can be called without i3 as well.
		csh -c "qb-cmd $NEWJAIL"
	fi
}

destroy_ephemeral() {
	stop_jail "$NEWJAIL"
	zfs destroy -rRf ${R_ZFS}/$NEWJAIL > /dev/null 2>&1
	zfs destroy -rRf ${U_ZFS}/$NEWJAIL > /dev/null 2>&1
	zfs destroy $NEWSNAP > /dev/null 2>&1
	sed -i '' -E "/^${NEWJAIL}[[:blank:]]/d" $QMAP
	sed -i '' -E "\@${NEWJAIL}[[:blank:]]*\{@,\@^[[:blank:]]*\}[[:blank:]]*\$@d" $JCONF
	exit 0
}

get_global_variables

get_options "$@"

newjail_name

main



