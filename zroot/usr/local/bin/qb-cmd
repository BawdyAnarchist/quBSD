#!/bin/sh

# Options and X11 window determine variables; incorporated by a single `eval` at the end

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-cmd.sh

get_options() {
	while getopts hnNrtu:vV opts ; do
		case $opts in
			h) get_msg_cmd "none" "usage_0" ;;
			n) _NEWWIND="xterm -e" ;;
			N) _NORUN="exit 0" ; _VERBOSE="true" ;;
        	r) _USER="root" ;;
			u) _USER="${OPTARG}" ;;
			v) _REDIRECT='' ; _VERBOSE="true" ;;
			*) exit 1 ;;
		esac
	done
	shift $(( OPTIND - 1 ))

	JAIL="$1" ; shift
	_CMD="$@"
}

parse_jail_vars() {

	# Default _CMD is $SHELL. If [-v] keep REDIRECT null, ${parameter-word}, otherwise dev/null
	[ -z "$_CMD" ] && _CMD="${_CMD:=$SHELL}" || _REDIRECT="${_REDIRECT- > /dev/null 2>&1 &}"

	# If X is running, get the jailname of the active window
	if pgrep -q Xorg ; then
		# Jailname of the active window is assigned to: $_XJAIL
		get_info _XJAIL
	fi

	# Unless already specified, JAIL and USER should be set to the active window
	JAIL="${JAIL:=$_XJAIL}"
	_USER="${_USER:=$JAIL}"
}

connect_vm_session() {

	# Pull the qmap parameters for VM attachment
	get_jail_parameter -d TMUX $JAIL
	get_jail_parameter -d VNCRES $JAIL

	# Handle the vnc viewer port
	if [ ! "$VNCRES" = "none" ] ; then
		_vmpid=$(pgrep -xf "bhyve: $JAIL")
		_vncport=$(sockstat -P tcp \
							| sed -nE "s/.*bhyve[[:blank:]]+${_vmpid}.*\*:([[:digit:]]+).*/\1/p")
		# Launch vnc viewer
		[ -z "$_vncport" ] && _novnc="true"	|| vncviewer 0.0.0.0:$_vncport > /dev/null 2>&1 &
	else
		_novnc="true"
	fi

	# Launch TMUX if available
	[ "$TMUX" = "true" ] && tmux attach -t $JAIL || _nomux="true"

	# Error message for nothing to connect to
	[ "$_nomux" ] && [ "$_novnc" ] && get_msg_cmd "_2" "exit_1"
}

main() {
	parse_jail_vars

	# Launch host xterm
	[ "$JAIL" = "host" ] && exec xterm

	# Start the jail/VM if off
	if ! chk_isrunning $JAIL ; then
		# Verbose prints the bhyve command, if NORUN, will exit
		[ "$_VERBOSE" ] && get_msg_cmd "_3" "_cont" && start_jail -nq $JAIL && eval "$_NORUN"

		! qb-start "$JAIL" && get_msg_cmd "_1" "exit_1"
	fi

	# Either connect the VM, or jexec the command to the jail
	if chk_isvm "$JAIL" ; then
		connect_vm_session
	else
		[ "$_NORUN" ] && get_msg_cmd "_3" "_cont" \
			&& echo $_NEWWIND "jexec -l -U $_USER $JAIL $SHELL -c '$_CMD' $_REDIRECT" \
			|| eval $_NORUN $_NEWWIND "jexec -l -U $_USER $JAIL $SHELL -c '$_CMD' $_REDIRECT"
	fi
}


get_global_variables

get_options "$@"

main


