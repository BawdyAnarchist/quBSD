#!/bin/sh

# Options and X11 window determine variables; incorporated by a single `eval` at the end

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-cmd.sh

get_options() {
	while getopts hnNrtu:vV opts ; do
		case $opts in
			h) get_msg_cmd "none" "usage_0" ;;
			n) _NEWWIND="xterm -e" ;;
			N) _NORUN="true" ;;
        	r) _USER="root" ;;
			u) _USER="${OPTARG}" ;;
			v) _REDIRECT='' ; _VERBOSE="true" ;;
			*) exit 1 ;;
		esac
	done
	shift $(( OPTIND - 1 ))

	JAIL="$1" ; shift
	_CMD="$@"
}

parse_jail_vars() {

	# Passing commands through another terminal is tricky.
	if [ -z "$_CMD" ] ; then
		# No command is provided. Default to /bin/csh. Quotation not required
		_CMD="${_CMD:=/bin/csh}"

		# Redirect not desired, because we're using host xterm to access JAIL
		_REDIRECT=''
	else
		# Quotations are required to pass multiple arguments to jail, through jexec
		_CMD="'${_CMD}'"

		# {parameter-word} regards `null' as the "set" value. Default behavior of qb-cmd is to,
		# suppress output. So if [-v] option was set `null' ; we want to leave it that way.
		# NOTE: {paremeter-word} is not documented in man sh , but it works.
		_REDIRECT="${_REDIRECT- > /dev/null 2>&1 &}"
	fi

	# If X is running, get the jailname of the active window
	if pgrep -q Xorg ; then
		# Jailname of the active window is assigned to: $_XJAIL
		get_info _XJAIL
	fi

	# Unless already specified, JAIL and USER should be set to the active window
	JAIL="${JAIL:=$_XJAIL}"
	_USER="${_USER:=$JAIL}"
}

connect_vm_session() {

	# Pull the qconf parameters for VM attachment
	get_jail_parameter TMUX $JAIL
	get_jail_parameter VNCRES $JAIL

	# Handle the vnc viewer port
	if [ ! "$VNCRES" = "none" ] ; then
		_vmpid=$(pgrep -xf "bhyve: $JAIL")
		_vncport=$(sockstat -P tcp \
							| sed -nE "s/.*bhyve[[:blank:]]+${_vmpid}.*\*:([[:digit:]]+).*/\1/p")
		# Launch vnc viewer
		[ -z "$_vncport" ] && _novnc="true"	|| vncviewer 0.0.0.0:$_vncport > /dev/null 2>&1 &
	else
		_novnc="true"
	fi

	# Launch TMUX if available
	[ "$TMUX" = "true" ] && tmux attach -t $JAIL || _nomux="true"

	# Error message for nothing to connect to
	[ "$_nomux" ] && [ "$_novnc" ] && get_msg_cmd "_2" "exit_1"
}

main() {

	# If JAIL is still not assigned, assume user wants a host xterm
	if [ -z "$JAIL" ] || [ "$JAIL" = "host" ] ; then
		xterm &
		exit 0
	fi

	# Switch whether VM or jail
	if chk_isvm "$JAIL" ; then
		if ! chk_isrunning $JAIL && [ "$_NORUN" ] ; then
			# -N option, do not start VM, just print bhyve command
			start_jail -nq $JAIL
			exit 0

		elif ! chk_isrunning $JAIL ; then
			# Verbose prints the bhyve command
			[ "$_VERBOSE" ] && start_jail -nq $JAIL

			# Start the VM, if successful, connect the session
			! qb-start "$JAIL" && get_msg_cmd "_1" "exit_1"
		fi

		connect_vm_session
	else
		# Start the gateways then the jail, then execute command
		! chk_isrunning $JAIL && ! qb-start "$JAIL" && get_msg_cmd "_1" "exit_1"
		eval $_NEWWIND "jexec -l -U $_USER $JAIL csh -c $_CMD $_REDIRECT"
	fi
}


get_global_variables

get_options "$@"

parse_jail_vars

main


