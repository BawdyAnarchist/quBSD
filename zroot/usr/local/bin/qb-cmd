#!/bin/sh

# Options and X11 window determine variables; incorporated by a single `eval` at the end

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-cmd.sh

get_options() {
	while getopts hnru:v opts ; do
		case $opts in
			h) get_msg_qb_cmd "none" "usage_0" ;;
			n) _NEWWIND="xterm -e" ;;
        	r) _USER="root" ;;
			u) _USER="${OPTARG}" ;;
			v) _REDIRECT='' ;;
		esac
	done

	shift $(( OPTIND - 1 ))

	JAIL="$1" ; shift
	_CMD="$@"
	IF_ERR="${IF_ERR:=get_msg_qubsd}"

	# Passing commands through another terminal is tricky. 
	if [ -z "$_CMD" ] ; then

		# No command is provided. Default to /bin/csh. Quotation not required
		_CMD="${_CMD:=/bin/csh}"

		# Redirect not desired, because we're using host xterm to access JAIL 
		_REDIRECT=''

	else
		# Quotations are required to pass multiple arguments to jail, through jexec 
		_CMD="'${_CMD}'"
		
		# Unless [-v] is specified suppress output of command
		# NOTE: The behavior of {parameter-word} isn't documented in man sh, but it works.
		_REDIRECT="${_REDIRECT- > /dev/null 2>&1 &}"
	fi
}

main() {
	# Finds out which jail is running the active window, and sets the JAIL var
	# Only get window if Xorg is running 
	if pgrep -q Xorg ; then
		_id=$(xprop -root _NET_ACTIVE_WINDOW | sed "s/.*window id # //")
		_window=$(xprop -id "$_id" | grep "WM_CLIENT_MACHINE" \
					| sed "s/WM_CLIENT_MACHINE(STRING) = \"//")
		_window="${_window%\"}"
	fi
	
	# Unless already specified, JAIL and USER should be set to the active window 
	JAIL="${JAIL:=$_window}"
	_USER="${_USER:=$JAIL}"

	if [ -z "$JAIL" ] || [ "$JAIL" == `hostname` ] ; then
		# If JAIL is still not assigned, assume user wants a host xterm
		xterm &
		exit 0
	fi

	# Function handles all checks to see if jail needs to (and can) be started
	start_jail "$JAIL" "$IF_ERR" || get_msg_qb_cmd "none" "exit_1"

	# Final evaluation statement. Launches the window/commands 
	eval jexec -l -U $_USER $JAIL csh -c $_NEWWIND $_CMD $_REDIRECT
}

get_global_variables

get_options "$@"

main


