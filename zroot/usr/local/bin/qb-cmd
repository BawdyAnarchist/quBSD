#!/bin/sh

# Options and X11 window determine variables; incorporated by a single `eval` at the end

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-cmd.sh

get_options() {
	while getopts hnru:v opts ; do
		case $opts in
			h) get_msg_cmd "none" "usage_0" ;;
			n) _NEWWIND="xterm -e" ;;
        	r) _USER="root" ;;
			u) _USER="${OPTARG}" ;;
			v) _REDIRECT='' ;;
		esac
	done

	shift $(( OPTIND - 1 ))

	JAIL="$1" ; shift
	_CMD="$@"

	# Passing commands through another terminal is tricky. 
	if [ -z "$_CMD" ] ; then

		# No command is provided. Default to /bin/csh. Quotation not required
		_CMD="${_CMD:=/bin/csh}"

		# Redirect not desired, because we're using host xterm to access JAIL 
		_REDIRECT=''

	else
		# Quotations are required to pass multiple arguments to jail, through jexec 
		_CMD="'${_CMD}'"
		
		# {parameter-word} regards `null' as the "set" value. Default behavior of qb-cmd is to, 
		# suppress output. So if [-v] option was set `null' ; we want to leave it that way. 
		# NOTE: {paremeter-word} is not documented in man sh , but it works. 
		_REDIRECT="${_REDIRECT- > /dev/null 2>&1 &}"
	fi
}

main() {
	# If X is running, get the jailname of the active window 
	if pgrep -q Xorg ; then
		# Jailname of the active window is assigned to: $_XJAIL 
		get_info _XJAIL
	fi
	
	# Unless already specified, JAIL and USER should be set to the active window 
	JAIL="${JAIL:=$_XJAIL}"
	_USER="${_USER:=$JAIL}"

	if [ -z "$JAIL" ] || [ "$JAIL" = "host" ] ; then
		# If JAIL is still not assigned, assume user wants a host xterm
		xterm &
		exit 0
	fi

	# Start the jail or exit with failure messages. 
	start_jail "$JAIL" || get_msg_cmd "none" "exit_1"

	# Final evaluation statement. Launches the window/commands 
	eval $_NEWWIND "jexec -l -U $_USER $JAIL csh -c $_CMD $_REDIRECT"
}

get_global_variables

get_options "$@"

main


