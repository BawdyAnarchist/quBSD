#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-list.sh

get_options() {
	while getopts hj:lp:z opts ; do
		case $opts in
			h) get_msg_list "none" "usage_0" ;;
			j) JAIL="${OPTARG}" ;;
			l) LIST="true" ;;
			p) PARAM="${OPTARG}" ;;
			z) ZFSLIST="true" ;; 
		esac
	done

	shift $(( OPTIND - 1 ))
	
	[ "$1" ] && get_msg_list "_6" "usage_1"

	# Convert lower-case entered PARAM to upper (user-friendly)
	[ "$PARAM" ] && PARAM=$(echo "$PARAM" | tr '[:lower:]' '[:upper:]')
}

main() {
	if [ -z "$JAIL" ] && [ -z "$PARAM" ] && [ -z "$ZFSLIST" ] || [ "$LIST" ] ; then
		# None listed. Pulls just the list of container names 
		_result=$(grep -v "host" $JMAP | tail -n +2 | awk '{print $1}' | uniq)

	elif [ "$JAIL" ] && [ -z "$PARAM" ] && [ -z "$ZFSLIST" ] ; then
		# JAIL only. All JMAP entries for JAIL.
		_result=$(grep -E "^${JAIL}[[:blank:]]+" $JMAP) \
											|| get_msg_list "_2" "usage_1"
	
	elif [ -z "$JAIL" ] && [ "$PARAM" ] && [ -z "$ZFSLIST" ] ; then
		# PARAM only. All JMAP entries matching PARAM. 
		_result=$(grep -E "^[^[:blank:]]+[[:blank:]]+${PARAM}[[:blank:]]+" $JMAP) \
											|| get_msg_list "_3" "usage_1"

	elif [ -z "$JAIL" ] && [ -z "$PARAM" ] && [ "$ZFSLIST" ] ; then
		# ZFS list only. All datasets relevant to quBSD jails.
		_result=$(zfs list -r "$JAILS_ZFS" ; zfs list -r "$ZUSR_ZFS")

	elif [ "$JAIL" ] && [ "$PARAM" ] && [ -z "$ZFSLIST" ] ; then
		# Combination of JAIL and PARAM 
		_result=$(grep -E "^${JAIL}[[:blank:]]+${PARAM}[[:blank:]]" $JMAP) \
											|| get_msg_list "_4" "usage_1"

	elif [ "$JAIL" ] && [ -z "$PARAM" ] && [ "$ZFSLIST" ] ; then
		# All ZFS datasets related to JAIL 
		_result=$(zfs list -rt all -Ho name,used,mountpoint,origin "${JAILS_ZFS}/${JAIL}"\
		; zfs list -rt all -Ho name,used,mountpoint,origin "${ZUSR_ZFS}/${JAIL}") 

	else
		get_msg_list "_5" "usage_1"

	fi

	# Print results with a nice formatted header 
	echo ''
	if [ "$ZFSLIST" ] ; then
		printf "%b" "\nNAME USED MOUNTPOINT ORIGIN\n${_result}\n\n" | column -t
	else		
		printf "%b" "\nCONTAINER   PARAMETER   VALUE\n${_result}\n\n" | column -t 
	fi
	echo ''
}


get_global_variables

get_options "$@"

main

