#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-destroy.sh

get_options() {
	while getopts ch o ; do
		case $o in
			h) get_msg_qb_destroy "none" "usage_0" ;;
		esac
	done

	shift $(( OPTIND - 1 ))

	JAIL="$1"
	ACTION="${ACTION:=get_msg_qubsd}"
}

define_variables() {
	# Important parameters for checks 
	CLASS=$(sed -nE "s/^${JAIL}[[:blank:]]+class[[:blank:]]+//p" $JMAP)
	NO_DESTROY=$(sed -nE "s/^$JAIL[[:blank:]]+no_destroy[[:blank:]]+//p" $JMAP) 
	OFFJAILS=$(zfs list -o name,origin | grep -E "$JAIL\@.*\$" \
									| awk '{print $1}' | sed "s@.*/@@")

	# Get sizes of datasets to be destroyed, and simulation messages from zfs 
	if zfs list ${ZUSR_ZFS}/${JAIL} >> /dev/null 2>&1 ; then 
		zusrSize=$(zfs list -o used ${ZUSR_ZFS}/${JAIL} | tail -1) 
		zusrDestroy=$(zfs destroy -nvrRf ${ZUSR_ZFS}/${JAIL} | grep -v "${JAIL}\@")
	fi

	if	zfs list ${JAILS_ZFS}/$JAIL >> /dev/null 2>&1 ; then
		zrootSize=$(zfs list -o used ${JAILS_ZFS}/${JAIL} | tail -1)
		zrootDestroy=$(zfs destroy -nvrRf ${JAILS_ZFS}/${JAIL} | grep -v "${JAIL}\@")
	fi
}

checks() {
	# Alert that the jail is invalid, but do not error and exit
	check_isvalid_jail "$JAIL" "$ACTION"

	# no_destroy protection flag still active
	[ "$NO_DESTROY" == "true" ] && get_msg_qb_destroy "_2" "usage_1"	

	# Extra reminder that they're destorying a rootjail
	[ "$CLASS" == "rootjail" ] && get_msg_qb_destroy "_4" 

	# Print the datasets and amount of data to be destroyed
	get_msg_qb_destroy "_5" 
	[ -n "$zrootDestroy" ] && get_msg_qb_destroy "_6" 
	[ -n "$zusrDestroy" ] && get_msg_qb_destroy "_7"

	# Solicit user response. 
	get_msg_qb_destroy "_8"

	# "severe" requires a full `yes' to be typed
	get_user_response "severe" || get_msg_qb_destroy "_1" "exit_0"
}

main() {
	# Add current jail to the list of jails to be destroyed. 
	OFFJAILS="$OFFJAILS $JAIL"

	# Turn off all jails before applying changes 
	for _jail in $OFFJAILS ; do
		stop_jail "$_jail" "$ACTION"
	done
	
	# Destroy datasets
	[ "$zrootDestroy" ] && zfs destroy -rRf ${JAILS_ZFS}/${JAIL}
	[ "$zusrDestroy" ] && zfs destroy -rRf ${ZUSR_ZFS}/${JAIL}
	
	# Modify Files
	sed -i '' -E "/^${JAIL}[[:blank:]]/d" $JMAP
	sed -i '' -E "/^${JAIL}(\{|[[:blank:]])/,/^}/d" $JCONF
}


get_global_variables

get_options "$@"

define_variables

checks

main


