#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-stat.sh

get_options() {
	while getopts c:h opts ; do case $opts in
		c) COL="$OPTARG" ;;
		h) get_msg_stat "none" "usage_0" ;;
   esac  ;  done  ;  shift $(( OPTIND - 1 ))

	# Temp files for building the status report
	TMP1=$(mktemp -t "quBSD/qb-stat1")
	TMP2=$(mktemp -t "quBSD/qb-stat2")
	COL="${COL:=6}"

	# Trap to remove TMP files when exiting
	trap 'rm $TMP1 $TMP2 > /dev/null 2>&1 ; exit 0' INT TERM HUP QUIT EXIT
}

define_colors() {
	# NOTE: printf counts ANSI color escapes with \tabs in alignment
	# As a result, any color used for jails/VMs must have same length escapes
	COL_OFF='\033[0m'	       # Turn off color
	 NORMAL='\033[0;39m'     # Default terminal settings
     GREEN='\033[1;7;32m'   # Green, inverted, for active window alert
       RED='\033[1;31m'     # Bold Red
      BRED='\033[1;5;31m'   # Blinking bold red, for hostnet connection alert
      BLUE='\033[0;34m'     # Blue - server jails
      GRAY='\033[0;90m'     # Gray - system, templates, host, VMs, misc jails
    YELLOW='\033[0;33m'     # Yellow - net jails
     HILIT='\033[7;39m'     # Highlighted top line
}

get_stat_variables() {
	#Jails data
	JAILS=$(sed -En "s/^([^[:blank:]]+)[[:blank:]]+CLASS.*/\1/p" $QMAP)

	# Jailname of the active window is assigned to: $_XJAIL
	get_info _XJAIL

	# Input devices status
	cam=$(service webcamd onestatus | grep -o "webcamd is running")
	mic=$(service virtual_oss onestatus | grep -o "virtual_oss is running")

	# Host connected
	interfaces=$(ifconfig -l | sed "s/lo0//g")
	[ -z "$interfaces" ] && hostnet=""

	for _intf in $interfaces ; do
		$(ifconfig $_intf inet | grep -Eqs "^[[:blank:]]*inet") && hostnet="true" || hostnet=""
	done
}

get_jails_loop() {
	# Get key variables
	class=$(get_jail_parameter -eqs CLASS "$_jail")
	gateway=$(get_jail_parameter -deqs GATEWAY "$_jail")
	rootenv=$(sed -En "s/^${_jail}[[:blank:]]+ROOTENV.*[[:blank:]]+//p" $QMAP)
	rootenv="${rootenv:=-}"

	if chk_isrunning "$_jail" ; then
		if chk_isvm "$_jail" ; then
			jid=$(pgrep -xf "bhyve: $_jail")
			cpu=$(ps -p $jid -o %cpu | awk '{sum+=$1;} END {print sum;}')
			ram=$(ps -p $jid -o %mem | awk '{sum+=$1;} END {print sum;}')
		else
			jid=$(jls -j $_jail -n jid | sed "s/jid=//")
			cpu=$(ps axJ $_jail -o %cpu | awk '{sum+=$1;} END {print sum;}')
			ram=$(ps axJ $_jail -o %mem | awk '{sum+=$1;} END {print sum;}')
		fi
	elif [ "$class" = "host" ] ; then
		jid='-'
		cpu=$(ps -axo %cpu -o comm | grep -v idle | awk '{sum+=$1;} END {print sum;}')
		ram=$(ps -axo %mem -o comm | grep -v idle | awk '{sum+=$1;} END {print sum;}')
	else
		jid='-' ;  cpu='-' ;  ram='-'
	fi

	# Get ZFS disk size
	[ -z "${class##root*}" ] && _zfs="${R_ZFS}" || _zfs="${U_ZFS}"
	chk_valid_zfs "${_zfs}/${_jail}" && disk=$(zfs list -Ho used "${_zfs}/${_jail}")

	# This is for ordering purposes
	case "${_jail}_${class}" in
		serv-*)   sub="2" ;;
		net-*)    sub="3" ;;
		0*app*)  sub="4" ;;
		0*root*) sub="5" ;;
		host*)   sub="6" ;;
		*)		   sub="1" ;;
	esac

	case $sub in
		1) TEMPCOL=${NORMAL} ;;
		2) TEMPCOL=${BLUE} ;;
		3) TEMPCOL=${YELLOW} ;;
		4) TEMPCOL=${GRAY} ;;
		5) TEMPCOL=${GRAY} ;;
		6) TEMPCOL=${GRAY} ;;
	esac

	# Print the line for jail in TMP1
	printf "%b" "${TEMPCOL}$_jail\t" "$jid\t" "$gateway\t" "$class\t" "$rootenv\t" "$sub\t" "$disk\t" "$ram\t" "${cpu}${COL_OFF}\n" >> $TMP1
}

print_alerts() {
	printf "%b" "${GREEN}----------------------   ACTIVE WINDOW:  $_XJAIL ---------------------${COL_OFF}\n"

	if [ "$cam" -o "$mic" -o "$hostnet" ] ; then
		echo -e "${RED}####################################################################"
		[ "$cam" ] \
		&& echo -e "##             W E B C A M   D A E M O N   I S   O N  !!           ##"
		[ "$mic" ] \
		&& echo -e "##         M I C R O P H O N E   D A E M O N  I S  O N  !!         ##"
		[ "$hostnet" ] \
		&& echo -e "##${BRED}        H O S T  I S  N E T W O R K  C O N N E C T E D !!       ${COL_OFF}${RED}##"
		echo -e "####################################################################${COL_OFF}"
	fi
}

main() {
	while : ; do
		# Reset the TMP files
		printf "%b" \
			"${HILIT}CONTAINER\tPID\tGATEWAY\tCLASS\tROOT\tDISK\t%RAM\t%CPU${COL_OFF}\n" > $TMP1
		echo '' > $TMP2

		# Get the general status variables
		get_stat_variables

		# Assemble the full stats of all jails. Redirect to prevent errors from flashing
		for _jail in $JAILS ; do
			get_jails_loop > /dev/null 2>&1
		done

		# Sort -b ignores leadings spaces, -f ignores case ; grep remove #defaults from QMAP
		(head -n 1 $TMP1 && tail -n +2 $TMP1 | sort -fbk $COL | cut -f 1,2,3,4,5,7,8,9 \
				| grep -Ev '#default') >> $TMP2

		# Clear at the last moment; re-print the new file in nice columns; plus any alerts
		clear
		column -t $TMP2
		print_alerts

		sleep 1
	done
}

get_global_variables

get_options "$@"

define_colors

main

