#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-hostnet.sh

get_options() {
	while getopts cdht:u opts ; do case $opts in
		c) cron_down ; exit 0 ;;
		d) _CMD="down" ;;
		h) msg_hostnet -eu ;;
		t) TIMEOUT="$OPTARG" ;;
		u) [ -z "$_CMD" ] && _CMD="up" || msg_hostnet -Eum _1 ;;
		*) exit 1 ;;
   esac  ;  done  ;  shift $(( OPTIND - 1 ))

	TIMEOUT="${TIMEOUT:=300}"
	PF_PASS="/etc/pf_pass.conf"
}

get_parameters() {
	# Did not specify an action
	[ -z "$_CMD" ] && msg_hostnet -Eum _2

	# Check validity of timeout provided
	chk_integer -g 0 -v "[-t <timeout>]" -- $TIMEOUT

	# Must get host network parameters.
	get_jail_parameter -d GATEWAY "host" || exit 1
	get_jail_parameter -d IPV4    "host" || exit 1
}

connection_down() {
	# Find all epairs and destroy them.
	ifconfig -l | grep -o "epair[[:digit:]]*[a,b]" | xargs -I@ ifconfig @ destroy

	# Make sure all other interfaces have no IP addr, and are down (except loopback).
	for _intf in $(ifconfig -l | sed -E "s/lo[[:digit:]]+//g") ; do
		ifconfig $_intf -alias > /dev/null 2>&1
		ifconfig $_intf down
	done

	# Set pf.conf, which is simply: "block all"
	pfctl -f /etc/pf.conf
}

cron_down() {
	for _tap in $(ifconfig -g tap) ; do
		ifconfig $_tap -alias > /dev/null 2>&1
		ifconfig $_tap down
	done
}

revert_connection() {
	# User opted out of the <timeout> feature
	[ "$TIMEOUT" -eq 0 ] && msg_hostnet -em _7

	# Wait the prescribed time
	sleep $TIMEOUT

	# Check that there aren't still `pkg` or `freebsd-update` commands being run
	while $(pgrep -qf '/usr/sbin/freebsd-update') || $(pgrep -q 'pkg') ; do
		sleep 10
	done

	# Then bring down connection and exit
	connection_down
	exit 0
}

main() {

	# Terminate any other instances of qb-hostnet that might be running (waiting for TIMEOUT)
	pkill -f '/bin/sh /usr/local/bin/qb-hostnet'

	# Remove all interfaces, to ensure that host network is in a known good state
	connection_down

	# Bring up host network connection
	if [ "$_CMD" = "up" ] ; then

		# start_jail command handles most error messages
		start_jail "$GATEWAY" ||  msg_hostnet -Em _3

		_VIF=$(connect_client_to_gateway -ei "$IPV4" "host" "$GATEWAY")

      # Modify pf_pass with the cu
		sed -i '' -E "s@EXT_IF[[:blank:]]*=.*@EXT_IF = \"${_VIF}\"@" $PF_PASS
		sed -i '' -E "s@JIP[[:blank:]]*=.*@JIP = \"${IPV4}\"@" $PF_PASS

		# Change pf to file that passes internet from host to outside.
		pfctl -f /etc/pf_pass.conf

		# Restart ntpd. One problem with host being offline is that it loses time sync
		service ntpd restart > /dev/null 2>&1

		revert_connection &
		exit 0
	fi
}

get_global_variables

get_options "$@"

get_parameters

main



