#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-hostnet.sh

get_options() {
	while getopts dhu opts ; do
		case $opts in
			d) ACTION="down" ;;
			h) get_msg_qb_hostnet "none" "usage_0" ;;
			u) [ -z "$ACTION" ] && ACTION="up" || get_msg_qb_hostnet "_1" "usage_1" ;;
		esac
	done

	# Did not specify an action
	[ "$OPTIND" == 1 ] && get_msg_qb_hostnet "_2" "usage_1" 

	# Define script variables
	_jIP=$(sed -n "s/^host[[:blank:]]*IP0[[:blank:]]*//p" $JMAP)
	TUNNEL=$(sed -nE "s/^host[[:blank:]]+tunnel[[:blank:]]+//p" $JMAP)
	MTU=$(sed -nE "s:^mtu[[:blank:]]+::p" $QBCONF) 
}

main() {
	# Regardless of [-u] or [-d], first remove all interfaces, 
	# to ensure that host is in a known good state.
		
	# Find all epairs and destroy them. 
	ifconfig -l | grep -o "epair[[:digit:]]*[a,b]" | xargs -I@ ifconfig @ destroy
	
	# Set pf.conf, which is simply: "block all"
	pfctl -f /etc/pf.conf	
	
	# Bring up host network connection 
	if [ "$ACTION" == "up" ] ; then 

		# start_jail command handles most error messages 
		start_jail "$TUNNEL"  ||  get_msg_qb_hostnet "_3" "usage_1"
	
		# Create epair, and set it up inside the gateway
		_epair=$(ifconfig epair create)
		ifconfig "${_epair%?}a" vnet $TUNNEL
		jexec -l $TUNNEL ifconfig "${_epair%?}a" inet ${_jIP%.*/*}.1/${_jIP#*/} mtu $MTU up

		# Configure epair on the host side
		ifconfig "${_epair%?}b" inet $_jIP mtu $MTU up
		route add default "${_jIP%.*/*}.1"

		# Change pf to file that passes internet from host to outside. 
		pfctl -f /etc/pf_pass.conf

	fi
}

get_global_variables

get_options "$@"

main



