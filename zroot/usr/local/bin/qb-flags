#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-flags.sh

get_options() {
	while getopts dhru opts ; do
		case $opts in
			d) DOWN="true" ;;
			h) get_msg_qb_flags "none" "usage_0" ;;
			u) UP="true" ;; 
			r) RESTORE="true" ;; 
		esac
	done

	shift $(( OPTIND - 1 ))

	JAIL="$1"
	IF_ERR="${IF_ERR:=get_msg_qubsd}"
}

checks() {
	if [ -z "${DOWN}${UP}${RESTORE}" ] ; then
		# User didn't specify an action 
		get_msg_qb_flags "_1" "usage_1"

	elif echo "${DOWN}${UP}${RESTORE}" | grep -Eqs "truetrue" ; then
		# Can't specify multiple actions 
		get_msg_qb_flags "_2" "usage_1"

	elif [ -z "$JAIL" ] ; then
		# Must have a jail to operate on 
		get_msg_qb_flags "_3" "usage_1"

	fi

	# Check for valid jail, exit if invalid 
	check_isvalid_jail "$JAIL" "$IF_ERR" || get_msg_qb_flags "none" "usage_1"
}

main() {
	if [ "$DOWN" ] ; then
		chflags -R noschg ${M_JAILS}/$JAIL
		chflags -R noschg ${M_ZUSR}/$JAIL

	elif [ "$UP" ] ; then
		# schg for all user files
		chflags -R schg ${M_ZUSR}/$JAIL

		# Want to avoid errors of trying to set schg on /dev and other invalid locations 
		jdir="/bin /sbin /boot /etc /home /lib /libexec /root /rw /usr"

		# Cycle through directories above and recursively schg  
	   for _dir in $jdir; do
			chflags -R schg "${M_JAILS}/${JAIL}${_dir}" > /dev/null 2>&1
		done

	elif [ "$RESTORE" ] ; then
		# Jails might have different chflag settings if started or stopped
		check_isrunning_jail "$JAIL" \
									&& ${QBDIR}/exec.poststart $JAIL \
																|| ${QBDIR}/exec.poststop $JAIL
	fi
}


get_global_variables

get_options "$@"

checks

main


