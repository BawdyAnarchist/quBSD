#!/bin/sh

. /usr/local/lib/quBSD/quBSD.sh
. /usr/local/lib/quBSD/msg-flags.sh

get_options() {
	while getopts dhru opts ; do case $opts in
		d) DOWN="true" ;;
		h) get_msg2 -eu ;;
		u) UP="true" ;;
		r) RESTORE="true" ;;
		*) exit 1 ;;
   esac  ;  done  ;  shift $(( OPTIND - 1 ))

	JAIL="$1"
}

checks() {
	if [ -z "${DOWN}${UP}${RESTORE}" ] ; then
		# User didn't specify an action
		get_msg2 -Eum _e1

	elif echo "${DOWN}${UP}${RESTORE}" | grep -Eqs "truetrue" ; then
		# Can't specify multiple actions
		get_msg2 -Eum _e2

	elif [ -z "$JAIL" ] ; then
		# Must have a jail to operate on
		get_msg2 -Eum _e3

	fi

	# Check for valid jail, exit if invalid
# Actually, maybe this doesnt matter. No jail ops, just file ops
#	chk_valid_jail -- "$JAIL" || get_msg2 -Eu
}

main() {
	if [ "$DOWN" ] ; then
		chflags -R noschg ${M_QROOT}/$JAIL
		[ -e ${M_ZUSR}/$JAIL ] && chflags -R noschg ${M_ZUSR}/$JAIL

	elif [ "$UP" ] ; then

		# Avoid errors by trying to set schg on /dev and other invalid locations
		jdir="/bin /sbin /boot /etc /home /lib /libexec /root /rw /usr"

		# Cycle through directories above and recursively schg
	   for _dir in $jdir; do
			chflags -fR schg "${M_QROOT}/${JAIL}/${_dir}"
		done

	elif [ "$RESTORE" ] ; then
		# Jails might have different chflag settings if started or stopped
		chk_isrunning "$JAIL" \
									&& ${QBDIR}/exec-poststart $JAIL \
																|| ${QBDIR}/exec-release $JAIL
	fi
}


get_global_variables

get_options "$@"

checks

main


